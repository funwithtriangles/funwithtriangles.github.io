{"version":3,"sources":["app.js"],"names":["mouseLastMoved","ONE_THIRD","TWO_THIRD","TWO_PI","Math","PI","triAngles","colors","triWidth","triHeight","sqrt","friction","maxV","pixelRatio","window","devicePixelRatio","moveX","moveY","lastX","lastY","vx","vy","effects","containerEls","document","querySelectorAll","Pattern","canvas","createElement","width","height","context","getContext","triCount","floor","innerWidth","gridSize","globalAngle","draw","globalCompositeOperation","color","fillStyle","rect","fill","save","j","bool","xOffset","translate","posX","i","posY","triangle","restore","r","angle","x","y","angleX","angleY","beginPath","length","cos","sin","moveTo","lineTo","closePath","Effect","elContainer","self","maskImage","imageLoaded","elCanvas","querySelector","svgCanvas","cloneNode","maskImageUrl","getAttribute","imageRatio","pattern","createPattern","globalPattern","fillRect","setTransform","drawImage","resize","clientWidth","clientHeight","scale","style","addEventListener","Image","src","onload","handleMouseMove","e","Date","now","clientX","clientY","handlePhysics","drawAll","ax","acceleration","ay","az","z","push","requestAnimationFrame","animLoop"],"mappings":"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","file":"app.3b37783e.js","sourceRoot":"..\\src","sourcesContent":["\r\n\r\n// Constants\r\nvar ONE_THIRD = 1/3;\r\nvar TWO_THIRD = 2/3;\r\nvar TWO_PI = 2*Math.PI;\r\nvar triAngles = [\r\n    0,\r\n    ONE_THIRD*TWO_PI,\r\n    TWO_THIRD*TWO_PI\r\n]\r\n\r\n// Settings\r\nvar colors = [[241,118,76], [232,88,59]];\r\nvar triWidth = 100;\r\nvar triHeight = triWidth * (Math.sqrt(3)/2);\r\n//var imageSrcLarge = \"/images/header_wide.svg\";\r\n\r\nvar friction = 0.9;\r\nvar maxV = 100;\r\n\r\nvar pixelRatio = window.devicePixelRatio || 1;\r\n\r\n// May need to do this for performance reasons\r\n//var pixelRatio = Math.min(window.devicePixelRatio || 1, 1.5);\r\n\r\n// Mouse vars\r\nvar moveX = 0;\r\nvar moveY = 0;\r\nvar lastX = 0;\r\nvar lastY = 0;\r\nvar mouseLastMoved;\r\n\r\nvar vx = 0;\r\nvar vy = 0;\r\n\r\n// Store mutliple instances of the effect\r\nvar effects = [];\r\nvar containerEls = document.querySelectorAll('[data-triEffect]');\r\n\r\n// Create a pattern tile to be used in all instances\r\nvar Pattern = function() {\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.width = triWidth*2;\r\n    this.canvas.height = triHeight*2;\r\n\r\n    var context = this.canvas.getContext('2d');\r\n    var triCount = Math.floor(window.innerWidth/triWidth)*2;\r\n    var gridSize = triCount * triWidth;\r\n    var globalAngle = 0;\r\n\r\n    this.draw = function() {\r\n\r\n        // Background color in case holes peep through\r\n        context.globalCompositeOperation = 'normal';\r\n        var color = colors[0];\r\n        context.fillStyle = 'rgb('+color[0]+','+color[1]+','+color[2]+')';\r\n        context.rect(-gridSize/2,-gridSize/2,gridSize,gridSize);\r\n        context.fill();\r\n\r\n        context.save();\r\n\r\n        var color = colors[1];\r\n        context.fillStyle = 'rgba('+color[0]+','+color[1]+','+color[2]+','+1+')';\r\n        \r\n        // Iterate triangle Rows\r\n        for (var j = 0; j < triCount; j++) {\r\n\r\n            // Alternate offset of each row\r\n            var bool = j % 2;\r\n            var xOffset = triWidth - (2*triWidth*bool);\r\n            context.translate(xOffset,triHeight);\r\n            \r\n            // Adjust x position with mouse X, alternate +/- on row\r\n            var posX = (moveX - (2*moveX*bool))/10;\r\n            \r\n            // Alternate the blend mode for each row;\r\n            if (bool) {\r\n                context.globalCompositeOperation = 'difference';\r\n            } else {\r\n                context.globalCompositeOperation = 'screen';\r\n            }\r\n\r\n            for (var i = 0; i < triCount; i++ ) {\r\n\r\n                // Adjust y position with mouse y, alternate +/- on rcolow\r\n                var bool = i % 2;\r\n                var posY = (moveY - (2*moveY*bool))/10  - (gridSize/2);\r\n\r\n                // Draw triangle, alternate up/down rotation while adding the global rotation\r\n                this.triangle(triWidth, colors[bool], (Math.PI*bool)+globalAngle, (i*triWidth)+posX - (gridSize/2), posY);\r\n\r\n            }\r\n        }   \r\n\r\n        globalAngle+=0.003;\r\n        \r\n        context.restore();\r\n\r\n        \r\n    };\r\n\r\n        // Generates triangle at any position/rotation/color\r\n    this.triangle = function(r, color, angle, x, y) {\r\n\r\n        var angleX, angleY;\r\n\r\n        // Rotation\r\n        angle = angle + ONE_THIRD*Math.PI/2;\r\n\r\n        context.beginPath();\r\n        context.fillStyle = 'rgba('+color[0]+','+color[1]+','+color[2]+','+1+')';\r\n        \r\n        // Triangle points calculated using third angles on a circle\r\n        for (var i=0; i < triAngles.length; i++) {\r\n\r\n            angleX = r*Math.cos(triAngles[i] + angle) + x;\r\n            angleY = r*Math.sin(triAngles[i] + angle) + y;\r\n\r\n            if (i == 0) {\r\n                context.moveTo(angleX,angleY); \r\n            } else {\r\n                context.lineTo(angleX,angleY); \r\n            } \r\n\r\n        }\r\n\r\n        context.fill();\r\n        context.closePath();\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n// Use pattern tile on a canvas\r\nvar Effect = function(elContainer) {\r\n\r\n    var self = this;\r\n\r\n    var elCanvas = elContainer.querySelector('canvas');\r\n    var context = elCanvas.getContext('2d');\r\n\r\n    var svgCanvas = elCanvas.cloneNode();\r\n    var svgCanvasWidth;\r\n    var svgCanvasHeight;\r\n\r\n    var maskImageUrl = elContainer.getAttribute('data-triEffect');\r\n    var imageRatio = elContainer.getAttribute('data-aspectRatio');\r\n\r\n    var context = elCanvas.getContext('2d');\r\n    var maskImage;\r\n    var imageLoaded;\r\n\r\n    var width, height, cx, cy;\r\n\r\n    this.draw = function() {\r\n\r\n        // Don't draw unless image loaded\r\n        if (!imageLoaded && maskImageUrl) { return };\r\n\r\n        context.save();\r\n\r\n        var pattern = context.createPattern(globalPattern.canvas, \"repeat\");\r\n        context.fillStyle = pattern;\r\n        context.fillRect(0,0,width,height);\r\n\r\n            // Apply masked text image\r\n        if (maskImageUrl) {\r\n\r\n            context.globalCompositeOperation = 'destination-in';\r\n            context.setTransform(1,0,0,1,0,0);\r\n\r\n            // Draw text with temp canvas rather than SVG to solve FF bug\r\n            context.drawImage(svgCanvas,0,0, width, height);\r\n        }\r\n\r\n        context.restore();\r\n    }\r\n\r\n    this.resize = function() {\r\n\r\n        // Canvas sizing stuff\r\n        width = Math.floor(elCanvas.width = elContainer.clientWidth * pixelRatio);\r\n\r\n        if (maskImageUrl) {\r\n            height = Math.floor(elCanvas.height = (width/pixelRatio)*imageRatio * pixelRatio);\r\n        } else {\r\n            height = Math.floor(elCanvas.height = elContainer.clientHeight * pixelRatio);\r\n        }\r\n\r\n        cx = width/2;\r\n        cy = height/2;\r\n\r\n        context.scale(pixelRatio,pixelRatio);\r\n\r\n        elCanvas.style.width = Math.floor(width/pixelRatio)+\"px\";\r\n        elCanvas.style.height = Math.floor(height/pixelRatio)+\"px\";\r\n\r\n        // Draw SVG image onto temp canvas to solve FF bug\r\n        if (imageLoaded) {\r\n            svgCanvas.width = width;\r\n            svgCanvas.height = height;\r\n            svgCanvas.getContext('2d').drawImage(maskImage,0,0,width,height);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    window.addEventListener('resize', this.resize);\r\n\r\n    if (maskImageUrl) {\r\n        maskImage = new Image();\r\n        maskImage.src = maskImageUrl;\r\n\r\n\r\n        maskImage.onload = function() {\r\n\r\n            imageLoaded = true;\r\n            self.resize();\r\n        }\r\n        \r\n    }\r\n\r\n    this.resize();\r\n\r\n}\r\n\r\n// var resize = function() {\r\n\r\n//     checkScreenWidth();\r\n\r\n// }\r\n\r\n// var checkScreenWidth = function() {\r\n\r\n//     if (Modernizr.mq('(max-width: 600px)') && usingImage != 'small') {\r\n\r\n//         headerImage.src = imageSrcSmall\r\n//         usingImage = 'small';\r\n\r\n//     } else if (Modernizr.mq('(min-width: 600px)') && usingImage != 'large') {\r\n//         headerImage.src = imageSrcLarge;\r\n//         usingImage = 'large';\r\n//     }    \r\n    \r\n// }\r\n\r\n\r\nvar handleMouseMove = function(e) {\r\n\r\n    if (!mouseLastMoved) {\r\n        mouseLastMoved = Date.now();\r\n    }\r\n\r\n    // if (!mouseMoving) {\r\n    //     moveXStart = e.clientX;\r\n    //     moveYStart = e.clientY;\r\n    //     mouseMoving = true;\r\n    // }\r\n\r\n    // If last mouse recorded 10th of a second ago\r\n    if (mouseLastMoved < Date.now() - 50) {\r\n        // Get speed of mouse\r\n        vx = e.clientX - lastX;\r\n        vy = e.clientY - lastY;\r\n\r\n        // Update new values of mouse to check next time\r\n        lastX = e.clientX;\r\n        lastY = e.clientY;\r\n        mouseLastMoved = Date.now();\r\n\r\n    }\r\n}\r\n\r\n\r\nvar handlePhysics = function() {\r\n\r\n    if (vx > maxV) {\r\n        vx = maxV;\r\n    } else if (vx < -maxV) {\r\n        vx = -maxV;\r\n    }\r\n\r\n    if (vy > maxV) {\r\n        vy = maxV;\r\n    } else if (vy < -maxV) {\r\n        vy = -maxV;\r\n    }\r\n    \r\n\r\n    vx = vx*friction;\r\n    vy = vy*friction;\r\n\r\n    moveX += vx;\r\n    moveY += vy;\r\n}\r\n\r\nvar drawAll = function() {\r\n\r\n    globalPattern.draw();\r\n\r\n    for (var i=0; i<effects.length; i++) {\r\n        effects[i].draw();\r\n    }\r\n\r\n}\r\n\r\n\r\nwindow.addEventListener('mousemove', handleMouseMove);\r\nwindow.addEventListener('devicemotion', function(e) {\r\n\r\n    var ax = e.acceleration.x;\r\n    var ay = e.acceleration.y;\r\n    var az = e.acceleration.z;\r\n\r\n    if (ax > 0.5 || ax < -0.5) {\r\n        vx = ax * 10;\r\n    }\r\n\r\n    if (ay > 0.5 || ay < -0.5) {\r\n        vy = ay * 10;\r\n    }\r\n\r\n    if (az > 0.5 || az < -0.5) {\r\n        vy = az * 10;\r\n    }\r\n    \r\n});\r\n\r\nvar globalPattern = new Pattern();\r\n\r\n// Create instances of effect\r\nfor (var i=0; i<containerEls.length; i++) {\r\n\r\n    effects.push(new Effect(containerEls[i]));\r\n\r\n}\r\n\r\nrequestAnimationFrame(function animLoop(){\r\n    handlePhysics(); \r\n    drawAll();\r\n    requestAnimationFrame( animLoop );\r\n});\r\n\r\n"]}