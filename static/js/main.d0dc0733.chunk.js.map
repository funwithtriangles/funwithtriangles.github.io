{"version":3,"sources":["constants.tsx","components/Page.tsx","state.tsx","pages.tsx","page-data.tsx","utils/usePageDataVector.tsx","components/Camera.tsx","utils/useInjectActions.tsx","components/Dude.tsx","components/Paintings.tsx","components/Scene.tsx","components/Loader.tsx","utils/lerp.tsx","components/App.tsx","index.tsx"],"names":["breakpoints","dimensions","Container","styled","div","p","isFullHeightMob","Block","Page","props","content","state","pagePos","prevPagePos","currPageIndex","fuzzyPageIndex","prevPageIndex","mousePos","Vector2","Box","pageData","id","justify","camOffset","camOffsetMob","camPosition","Vector3","camLookAt","camOrbitOffset","href","action","tvPosition","Math","PI","usePageDataVector","vector","vec","useRef","items","useEffect","current","map","item","useFrame","t","smoothPagePos","sin","lerpVectors","medBreak","Camera","camera","PerspectiveCamera","viewOffset","viewOffsetAdjust","sceneDimensions","viewOffsetMob","viewOffsetMed","cylindricalPos","orbitOffset","lookAt","useThree","setDefaultCamera","size","cam","hfov","width","fov","atan","tan","aspect","sceneHeight","set","multiply","copy","height","add","position","setFromCylindricalCoords","x","y","z","setViewOffset","updateProjectionMatrix","ref","extraLoader","GLTFLoader","LoadingManager","video","document","createElement","muted","loop","src","play","videoTex","VideoTexture","screenMat","MeshBasicMaterial","Dude","loadExtraAssets","gltfObject","useGLTF","animations","useAnimations","actions","mixer","useState","currAction","setCurrAction","tv","scene","scale","armature","getObjectByName","traverse","obj","frustumCulled","castShadow","material","actionName","undefined","visible","reset","fadeIn","fadeOut","extraActionsUrl","enable","load","gltf","forEach","clip","name","clipAction","useInjectActions","object","encoding","sRGBEncoding","toneMapped","files","galleryWidth","texLoader","TextureLoader","geom","PlaneBufferGeometry","Single","basePos","velocity","activePos","mesh","Object3D","_","delta","addVectors","geometry","tempList","Array","fill","Gallery","mats","file","tex","mat","push","index","floor","numFrames","length","Paintings","sideLength","loadGallery","Plane","receiveShadow","args","transparent","opacity","Scene","mainAssetsHaveLoaded","boxMesh","node","rotation","intensity","shadow-camera-left","shadow-camera-bottom","shadow-camera-right","shadow-camera-top","shadow-camera-near","shadow-camera-far","shadowMapWidth","shadowMapHeight","fallback","Environment","preset","Main","Loader","progress","style","lerp","v0","v1","Background","PagesContainer","App","useProgress","pageRefs","updateScrollState","i","offsetTop","window","pageYOffset","currEl","relScroll","min","clientHeight","addEventListener","max","round","e","clientX","innerWidth","clientY","innerHeight","shadowMap","el","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0dc0733.chunk.js","sourcesContent":["export const breakpoints = {\r\n  medium: 768,\r\n  large: 1500,\r\n}\r\n\r\nexport const dimensions = {\r\n  sceneRatio: 1,\r\n  mobSceneRatio: 1,\r\n}\r\n","import styled from \"styled-components\"\r\nimport { breakpoints, dimensions } from \"../constants\"\r\n\r\ninterface PageProps {\r\n  justify: string\r\n  isFullHeightMob?: boolean\r\n  content: Function\r\n}\r\n\r\nconst Container = styled.div<PageProps>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  padding-top: ${(p) =>\r\n    p.isFullHeightMob ? 0 : `${dimensions.mobSceneRatio * 100}vw`};\r\n  height: ${(p) => (p.isFullHeightMob ? \"100vh\" : \"auto\")};\r\n  color: white;\r\n\r\n  @media (min-width: ${breakpoints.medium}px) {\r\n    padding-top: 0;\r\n    min-height: 100vh;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n  }\r\n`\r\nconst Block = styled.div<PageProps>`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  backdrop-filter: blur(20px);\r\n  background: rgba(252, 102, 3, 0.5);\r\n  border-width: 1px 0;\r\n\r\n  h2 {\r\n    font-size: 3rem;\r\n    line-height: 1;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.medium}px) {\r\n    background: none;\r\n    backdrop-filter: none;\r\n    min-height: 100vh;\r\n    padding: 4rem;\r\n    border-width: 1px;\r\n    height: auto;\r\n\r\n    h2 {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.large}px) {\r\n    h2 {\r\n      font-size: 6rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport function Page(props: PageProps) {\r\n  return (\r\n    <Container {...props}>\r\n      <Block {...props}>\r\n        <div>{props.content()}</div>\r\n      </Block>\r\n    </Container>\r\n  )\r\n}\r\n","import { Vector2 } from \"three\"\r\n\r\nexport const state = {\r\n  pagePos: 0,\r\n  prevPagePos: 0,\r\n  currPageIndex: 0,\r\n  fuzzyPageIndex: 0, // page index that switches a bit early\r\n  prevPageIndex: 0,\r\n  mousePos: new Vector2(),\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nconst Box = styled.div`\r\n  font-size: 0.7em;\r\n\r\n  padding: 1.5rem 2rem;\r\n  margin-bottom: 1rem;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  // color: #472619;\r\n  border-radius: 5px;\r\n\r\n  /* \r\n  padding: 1rem 0;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5); */\r\n`\r\n\r\nexport function Intro() {\r\n  return (\r\n    <>\r\n      <h2>Hello</h2>\r\n      <p>\r\n        I'm Alex Kempton, a creative developer and artist working with new\r\n        technologies to build interesting visual experiences. I am the creator\r\n        of <a href=\"https://github.com/nudibranchrecords/hedron\">Hedron</a>,\r\n        visual artist for <a href=\"http://polyop.uk/\">Polyop</a> and creative\r\n        director at{\" \"}\r\n        <a href=\"http://nudibranchrecords.uk/\">Nudibranch Records</a>.\r\n      </p>\r\n      <Box>\r\n        <p>\r\n          Scroll down to learn more, or just <a href=\"#contact\">get in touch</a>\r\n          !\r\n        </p>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Tech() {\r\n  return (\r\n    <>\r\n      <h2>Playful Technologist</h2>\r\n      <p>\r\n        For me it’s always important to have fun on a project and I’m often\r\n        happiest when working with new tools. AR and VR is an exciting place to\r\n        be at the moment, especially as this is now something that can be\r\n        achieved on a website! I’m always looking for projects with an\r\n        interesting visual or interactive element.\r\n      </p>\r\n      <Box>\r\n        <h3>Some fun things I've made</h3>\r\n        <dl>\r\n          <dt>\r\n            <a href=\"https://www.instagram.com/ar/2985068164844778/\">\r\n              Leapwerm\r\n            </a>\r\n          </dt>\r\n          <dd>\r\n            Instagram filter where you fly through space as an ever evolving\r\n            worm\r\n          </dd>\r\n          <dt>\r\n            <a href=\"https://www.instagram.com/ar/2985068164844778/\">\r\n              Instatrip\r\n            </a>\r\n          </dt>\r\n          <dd>\r\n            Face filters that work in the browser. I wanted to see what was\r\n            possible using only open-source tech (no apps required!)\r\n          </dd>\r\n          <dt>\r\n            <a href=\"https://thickerthanblood.co.uk/\">Thicker than Blood</a>\r\n          </dt>\r\n          <dd>An online rendition of Izdihar Afyouni's conceptual art piece</dd>\r\n        </dl>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Engineer() {\r\n  return (\r\n    <>\r\n      <h2>10+ Years an Engineer</h2>\r\n      <p>\r\n        I’ve been solving problems with code since 2010. While I learn towards\r\n        artistic projects, I enjoy all kinds of technical challenge! I've worked\r\n        on various projects, such as online banking interfaces, data\r\n        visualisations, desktop software and interactive maps.\r\n      </p>\r\n      <Box>\r\n        <h3>Hedron</h3>\r\n        <p>\r\n          I created and actively maintain{\" \"}\r\n          <a href=\"https://github.com/nudibranchrecords/hedron\">Hedron</a>, an\r\n          open source tool for designing and performing live visual shows. It\r\n          has to be one of the most complicated projects I have worked on and\r\n          continues to grow. I was invited to do a{\" \"}\r\n          <a href=\"https://www.youtube.com/watch?v=B6z0flqI9Lk\">\r\n            short talk about the software at React Day Berlin\r\n          </a>\r\n          .\r\n        </p>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Art() {\r\n  return (\r\n    <>\r\n      <h2>Art for Music</h2>\r\n      <p>\r\n        I’m lucky to have had the opportunity to work with various musicians\r\n        over the years. As well as creating and performing live visuals for\r\n        Polyop, I’ve produced various pieces for other artists too, such as\r\n        album artwork and music videos.\r\n      </p>\r\n      <Box>\r\n        <h3>Gene-weaving octopodes</h3>\r\n        <p>\r\n          One piece I'm particularly proud of is for the Nudibranch compilation\r\n          album,{\" \"}\r\n          <a href=\"https://nudibranchrecords.bandcamp.com/album/molecular-selections\">\r\n            Molecular Selections\r\n          </a>\r\n          . As well as the main artwork, I also produced animated promotional\r\n          pieces along with some funky cassette designs.\r\n        </p>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Contact() {\r\n  return (\r\n    <>\r\n      <h2 id=\"contact\">Get in touch</h2>\r\n      <ul>\r\n        <li>\r\n          <strong>Email:</strong>{\" \"}\r\n          <a href=\"mailto:alex@funwithtriangles.net\">\r\n            alex@funwithtriangles.net\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <strong>Twitter:</strong> @\r\n          <a href=\"https://twitter.com/funtriangles\">funtriangles</a>\r\n        </li>\r\n        <li>\r\n          <strong>Instagram:</strong> @\r\n          <a href=\"https://instagram.com/funwithtriangles\">funwithtriangles</a>\r\n        </li>\r\n        <li>\r\n          <strong>Github:</strong>{\" \"}\r\n          <a href=\"https://github.com/funwithtriangles\">funwithtriangles</a>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import { Vector3, Vector2 } from \"three\"\r\nimport { Intro, Tech, Engineer, Art, Contact } from \"./pages\"\r\n\r\nexport type VectorKeys =\r\n  | \"camOffset\"\r\n  | \"camOffsetMob\"\r\n  | \"camPosition\"\r\n  | \"camLookAt\"\r\n  | \"camOrbitOffset\"\r\n  | \"tvPosition\"\r\n\r\nexport interface PageData {\r\n  id: string\r\n  content: Function\r\n  justify: string\r\n  camOffset: Vector2\r\n  camOffsetMob: Vector2\r\n  isFullHeightMob?: boolean\r\n  camPosition: Vector3 // Cylindrical (rad, theta, y)\r\n  camLookAt: Vector3\r\n  camOrbitOffset: Vector3\r\n  action: string\r\n  tvPosition: Vector3\r\n}\r\n\r\nexport const pageData: PageData[] = [\r\n  {\r\n    id: \"intro\",\r\n    justify: \"flex-end\",\r\n    camOffset: new Vector2(0.5, -0.1),\r\n    camOffsetMob: new Vector2(0, -0.25),\r\n    camPosition: new Vector3(3.5, 0, 0.8),\r\n    camLookAt: new Vector3(-1.2, 0.8, 0),\r\n    camOrbitOffset: new Vector3(-1.2, 0, 0),\r\n    content: Intro,\r\n    action: \"idle\",\r\n    tvPosition: new Vector3(0, 0, 0),\r\n  },\r\n  {\r\n    id: \"tech\",\r\n    justify: \"flex-start\",\r\n    camOffset: new Vector2(0.5, 0),\r\n    camOffsetMob: new Vector2(0, 0),\r\n    camPosition: new Vector3(1, 0, 2),\r\n    camLookAt: new Vector3(0, 1.1, 0),\r\n    camOrbitOffset: new Vector3(0, 0, 0),\r\n    content: Tech,\r\n    action: \"idle\",\r\n    tvPosition: new Vector3(-100, 0, 0),\r\n  },\r\n  {\r\n    id: \"engineer\",\r\n    justify: \"flex-end\",\r\n    camOffset: new Vector2(0.5, 0.15),\r\n    camOffsetMob: new Vector2(0, 0),\r\n    camPosition: new Vector3(2, 0, 1),\r\n    camLookAt: new Vector3(0, 1.5, 0),\r\n    camOrbitOffset: new Vector3(0, 0, 0),\r\n    content: Engineer,\r\n    action: \"strut\",\r\n    tvPosition: new Vector3(-60, 0, 0),\r\n  },\r\n  {\r\n    id: \"art\",\r\n    justify: \"flex-start\",\r\n    camOffset: new Vector2(0.5, -0.1),\r\n    camOffsetMob: new Vector2(0, 0),\r\n    camPosition: new Vector3(5, Math.PI, 1),\r\n    camLookAt: new Vector3(0, 1, 0),\r\n    camOrbitOffset: new Vector3(0, 0, 0),\r\n    content: Art,\r\n    action: \"idle\",\r\n    tvPosition: new Vector3(-60, 0, 0),\r\n  },\r\n  {\r\n    id: \"contact\",\r\n    justify: \"flex-end\",\r\n    camOffset: new Vector2(0.5, 0),\r\n    camOffsetMob: new Vector2(0, 0),\r\n    camPosition: new Vector3(2, Math.PI * 2, 1),\r\n    camLookAt: new Vector3(0, 1, 0),\r\n    camOrbitOffset: new Vector3(0, 0, 0),\r\n    isFullHeightMob: true,\r\n    content: Contact,\r\n    action: \"chicken\",\r\n    tvPosition: new Vector3(-60, 0, 0),\r\n  },\r\n]\r\n","import { useEffect, useRef } from \"react\"\r\nimport { useFrame } from \"react-three-fiber\"\r\nimport { Vector2, Vector3 } from \"three\"\r\nimport { pageData, VectorKeys } from \"../page-data\"\r\nimport { state } from \"../state\"\r\n\r\nconst easeInOutSin = (t: number) =>\r\n  (1 + Math.sin(Math.PI * t - Math.PI / 2)) / 2\r\n\r\nexport function usePageDataVector(id: VectorKeys, vector: Vector2 | Vector3) {\r\n  const vec = useRef<any>(vector)\r\n\r\n  const items = useRef<typeof vector[]>([])\r\n\r\n  useEffect(() => {\r\n    items.current = pageData.map((item) => item[id])\r\n  }, [id])\r\n\r\n  useFrame(() => {\r\n    const smoothPagePos = easeInOutSin(state.pagePos % 1)\r\n\r\n    vec.current.lerpVectors(\r\n      items.current[state.currPageIndex],\r\n      items.current[state.currPageIndex + 1],\r\n      smoothPagePos\r\n    )\r\n  })\r\n\r\n  return vec\r\n}\r\n","import { useEffect, useRef } from \"react\"\r\nimport { useFrame, useThree } from \"react-three-fiber\"\r\nimport { PerspectiveCamera, Vector2, Vector3 } from \"three\"\r\nimport { breakpoints, dimensions } from \"../constants\"\r\nimport { state } from \"../state\"\r\nimport { usePageDataVector } from \"../utils/usePageDataVector\"\r\n\r\nconst mouseAmp = 0.5\r\nconst medBreak = breakpoints.medium\r\n\r\nexport function Camera() {\r\n  const camera = useRef<PerspectiveCamera>(new PerspectiveCamera())\r\n  const viewOffset = useRef(new Vector2())\r\n  const viewOffsetAdjust = useRef(new Vector2())\r\n  const sceneDimensions = useRef(new Vector2())\r\n\r\n  // Fair play, hooks are pretty awesome!\r\n  const viewOffsetMob = usePageDataVector(\"camOffsetMob\", new Vector3())\r\n  const viewOffsetMed = usePageDataVector(\"camOffset\", new Vector3())\r\n  const cylindricalPos = usePageDataVector(\"camPosition\", new Vector3())\r\n  const orbitOffset = usePageDataVector(\"camOrbitOffset\", new Vector3())\r\n  const lookAt = usePageDataVector(\"camLookAt\", new Vector3())\r\n\r\n  const { setDefaultCamera, size } = useThree()\r\n\r\n  useEffect(() => {\r\n    void setDefaultCamera(camera.current)\r\n  })\r\n\r\n  useFrame(() => {\r\n    const cam = camera.current\r\n\r\n    // Use horizontal fov instead of vertical\r\n    const hfov = size.width >= medBreak ? 105 : 60\r\n    cam.fov =\r\n      (Math.atan(Math.tan((hfov * Math.PI) / 360) / cam.aspect) * 360) / Math.PI\r\n\r\n    if (size.width >= medBreak) {\r\n      // Resizing based on a target aspect ratio, so only changing width of window affects sizings / offsets\r\n      const sceneHeight = size.width * dimensions.sceneRatio\r\n      sceneDimensions.current.set(size.width / 2, sceneHeight)\r\n      viewOffsetMed.current.multiply(sceneDimensions.current)\r\n\r\n      viewOffset.current.copy(viewOffsetMed.current)\r\n    } else {\r\n      // Resizing based on a target aspect ratio, so only changing width of window affects sizings / offsets\r\n      const sceneHeight = size.width * dimensions.mobSceneRatio\r\n      sceneDimensions.current.set(size.width, sceneHeight)\r\n\r\n      // With mob we have to an extra vertical adjustment\r\n      viewOffsetAdjust.current.set(0, (size.height - sceneHeight) / 2)\r\n      viewOffsetMob.current\r\n        .multiply(sceneDimensions.current)\r\n        .add(viewOffsetAdjust.current)\r\n\r\n      viewOffset.current.copy(viewOffsetMob.current)\r\n    }\r\n\r\n    cam.position.setFromCylindricalCoords(\r\n      cylindricalPos.current.x,\r\n      cylindricalPos.current.y,\r\n      cylindricalPos.current.z\r\n    )\r\n\r\n    if (size.width >= medBreak) {\r\n      // Damped orbit based on mouse pos\r\n      cam.position.x += state.mousePos.x * mouseAmp\r\n      cam.position.y += state.mousePos.y * mouseAmp\r\n    }\r\n\r\n    cam.position.add(orbitOffset.current)\r\n\r\n    cam.lookAt(lookAt.current)\r\n\r\n    cam.setViewOffset(\r\n      size.width,\r\n      size.height,\r\n      viewOffset.current.x,\r\n      viewOffset.current.y,\r\n      size.width,\r\n      size.height\r\n    )\r\n    cam.updateProjectionMatrix()\r\n  })\r\n\r\n  return <perspectiveCamera ref={camera} />\r\n}\r\n","import { useEffect } from \"react\"\r\nimport {\r\n  AnimationAction,\r\n  AnimationMixer,\r\n  LoadingManager,\r\n  Object3D,\r\n} from \"three\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\n\r\nconst extraLoader = new GLTFLoader(new LoadingManager())\r\n\r\nexport function useInjectActions(\r\n  extraActionsUrl: string,\r\n  enable: boolean,\r\n  actions: { [key: string]: AnimationAction },\r\n  ref: React.MutableRefObject<Object3D | undefined>,\r\n  mixer: AnimationMixer\r\n) {\r\n  useEffect(() => {\r\n    if (enable) {\r\n      extraLoader.load(extraActionsUrl, (gltf) => {\r\n        gltf.animations.forEach((clip) => {\r\n          actions[clip.name] = mixer.clipAction(clip, ref.current)\r\n        })\r\n      })\r\n    }\r\n  }, [extraActionsUrl, enable, mixer, actions, ref])\r\n}\r\n","import { useAnimations, useGLTF } from \"drei\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { useFrame } from \"react-three-fiber\"\r\nimport {\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  sRGBEncoding,\r\n  Vector3,\r\n  VideoTexture,\r\n} from \"three\"\r\nimport { pageData } from \"../page-data\"\r\nimport { state } from \"../state\"\r\nimport { useInjectActions } from \"../utils/useInjectActions\"\r\nimport { usePageDataVector } from \"../utils/usePageDataVector\"\r\n\r\nconst modSc = 0.2\r\nconst blendDuration = 1\r\n\r\ntype DudeProps = {\r\n  loadExtraAssets: boolean\r\n}\r\n\r\nconst video = document.createElement(\"video\")\r\nvideo.muted = true\r\nvideo.loop = true\r\nvideo.src = \"video/showreel.mp4\"\r\nvideo.play()\r\n\r\nconst videoTex = new VideoTexture(video)\r\nconst screenMat = new MeshBasicMaterial({ map: videoTex })\r\nvideoTex.encoding = sRGBEncoding\r\nscreenMat.toneMapped = false\r\n\r\nexport function Dude({ loadExtraAssets }: DudeProps) {\r\n  const gltfObject = useGLTF(\"models/octobot.glb\")\r\n  const { animations } = gltfObject\r\n  const { actions, ref, mixer } = useAnimations(animations)\r\n  const [currAction, setCurrAction] = useState(\"idle\")\r\n  const tv = useRef<Mesh>()\r\n\r\n  useEffect(() => {\r\n    gltfObject.scene.scale.set(modSc, modSc, modSc)\r\n    const armature = gltfObject.scene.getObjectByName(\"Armature\")\r\n\r\n    armature?.traverse((obj) => {\r\n      obj.frustumCulled = false\r\n      obj.castShadow = true\r\n    })\r\n\r\n    tv.current = gltfObject.scene.getObjectByName(\"tv\") as Mesh\r\n\r\n    tv.current.traverse((obj) => {\r\n      obj.frustumCulled = false\r\n      obj.castShadow = true\r\n    })\r\n\r\n    const screen = gltfObject.scene.getObjectByName(\"tvscreen\") as Mesh\r\n    screen.material = screenMat\r\n  })\r\n\r\n  const tvPosition = usePageDataVector(\"tvPosition\", new Vector3())\r\n\r\n  useFrame(() => {\r\n    const page = pageData[state.fuzzyPageIndex]\r\n    const actionName = page.action\r\n\r\n    // Set animation for dude\r\n    if (actions[actionName] !== undefined) {\r\n      setCurrAction(actionName)\r\n    } else {\r\n      // If action hasn't loaded yet, fall back to \"idle\" action\r\n      setCurrAction(\"idle\")\r\n    }\r\n\r\n    // Move TV based on page data\r\n    if (tv.current) {\r\n      tv.current.position.copy(tvPosition.current)\r\n      // Hide TV once it's out of the shot\r\n      tv.current.visible = tv.current.position.x > -40\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    // Update action when currAction updates\r\n    actions[currAction].reset().fadeIn(blendDuration).play()\r\n    return () => void actions[currAction].fadeOut(blendDuration)\r\n  }, [currAction, actions])\r\n\r\n  useInjectActions(\r\n    \"models/extra-actions.glb\",\r\n    loadExtraAssets,\r\n    actions,\r\n    ref,\r\n    mixer\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <primitive ref={ref} object={gltfObject.scene} />\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from \"react\"\r\nimport { useFrame } from \"react-three-fiber\"\r\nimport {\r\n  LoadingManager,\r\n  MeshBasicMaterial,\r\n  Object3D,\r\n  PlaneBufferGeometry,\r\n  sRGBEncoding,\r\n  TextureLoader,\r\n  Vector3,\r\n} from \"three\"\r\nimport { state } from \"../state\"\r\nconst files = [\r\n  \"molecular-main.jpg\",\r\n  \"sulkin-birds.jpg\",\r\n  \"sq-wave.jpg\",\r\n  \"lanquidity.jpg\",\r\n  \"molecular-threads.jpg\",\r\n  \"stigmergy.jpg\",\r\n  \"donttoucheyes.jpg\",\r\n  \"leapwerm.jpg\",\r\n]\r\nconst sideLength = 8\r\nconst gutter = 1\r\nconst numFrames = 28 // We're repeating textures\r\nconst galleryWidth = (sideLength + gutter) * numFrames\r\n\r\nconst texLoader = new TextureLoader(new LoadingManager())\r\n\r\ntype SingleProps = {\r\n  material: MeshBasicMaterial\r\n  position: [number, number, number]\r\n}\r\n\r\nconst geom = new PlaneBufferGeometry(sideLength, sideLength, 1, 1)\r\n\r\nfunction Single({ material, position }: SingleProps) {\r\n  const basePos = useRef(new Vector3(...position))\r\n  const velocity = useRef(new Vector3(0, 0, 0))\r\n  const activePos = useRef(new Vector3())\r\n  const mesh = useRef(new Object3D())\r\n\r\n  useFrame((_, delta) => {\r\n    velocity.current.x = -state.mousePos.x * 0.1\r\n    activePos.current.add(velocity.current)\r\n\r\n    mesh.current.position.addVectors(basePos.current, activePos.current)\r\n\r\n    if (mesh.current.position.x > galleryWidth / 2) {\r\n      activePos.current.x -= galleryWidth\r\n    } else if (mesh.current.position.x < -galleryWidth / 2) {\r\n      activePos.current.x += galleryWidth\r\n    }\r\n  })\r\n\r\n  return <mesh ref={mesh} geometry={geom} material={material} />\r\n}\r\n\r\nconst tempList = new Array(numFrames).fill(0)\r\n\r\nfunction Gallery() {\r\n  const mats = useRef<MeshBasicMaterial[]>([])\r\n\r\n  useEffect(() => {\r\n    files.forEach((file) => {\r\n      const tex = texLoader.load(`artwork/${file}`)\r\n      const mat = new MeshBasicMaterial({ map: tex })\r\n\r\n      tex.encoding = sRGBEncoding\r\n      mat.toneMapped = false\r\n\r\n      mats.current.push(mat)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {tempList.map((_, index) => {\r\n        const x =\r\n          (sideLength + gutter) * index -\r\n          (sideLength + gutter) * Math.floor(numFrames / 2)\r\n        return (\r\n          <Single\r\n            key={index}\r\n            material={mats.current[index % mats.current.length]}\r\n            position={[x, 0, 0]}\r\n          />\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Paintings({ ...props }) {\r\n  return (\r\n    <group {...props} position={[0, sideLength / 2 + 1, 5]}>\r\n      {props.loadGallery && <Gallery />}\r\n    </group>\r\n  )\r\n}\r\n","import { Suspense, useRef } from \"react\"\r\nimport { useFrame } from \"react-three-fiber\"\r\n\r\nimport { Camera } from \"./Camera\"\r\nimport { Dude } from \"./Dude\"\r\nimport { Paintings } from \"./Paintings\"\r\n\r\nimport { Environment } from \"drei\"\r\n\r\nfunction Plane({ ...props }) {\r\n  return (\r\n    <mesh {...props} receiveShadow>\r\n      <planeBufferGeometry args={[10, 10, 1, 1]} />\r\n      <shadowMaterial transparent opacity={0.2} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\ntype SceneProps = {\r\n  mainAssetsHaveLoaded: boolean\r\n}\r\n\r\nexport function Scene({ mainAssetsHaveLoaded }: SceneProps) {\r\n  const boxMesh = useRef<any>()\r\n\r\n  useFrame(() => {\r\n    const node = boxMesh?.current\r\n\r\n    if (node !== undefined) {\r\n      node.rotation.x += 0.01\r\n      node.rotation.y += 0.01\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Camera />\r\n      <directionalLight\r\n        intensity={0.5}\r\n        position={[-8, 10, 20]}\r\n        shadow-camera-left={-5}\r\n        shadow-camera-bottom={-1}\r\n        shadow-camera-right={1}\r\n        shadow-camera-top={5}\r\n        shadow-camera-near={0.5}\r\n        shadow-camera-far={100}\r\n        shadowMapWidth={1024}\r\n        shadowMapHeight={1024}\r\n        castShadow\r\n      />\r\n      <Plane rotation={[-0.5 * Math.PI, 0, 0]} />\r\n\r\n      <Suspense fallback={null}>\r\n        <Environment preset=\"sunset\" />\r\n        <Dude loadExtraAssets={mainAssetsHaveLoaded} />\r\n        <Paintings\r\n          loadGallery={mainAssetsHaveLoaded}\r\n          rotation={[0, Math.PI, 0]}\r\n        />\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nconst Main = styled.div`\r\n  position: fixed;\r\n  z-index: 1000;\r\n  background: rgba(252, 102, 3);\r\n  display: flex;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  color: white;\r\n  font-family: sans-serif;\r\n  text-transform: uppercase;\r\n\r\n  div {\r\n    height: 1px;\r\n    background: white;\r\n  }\r\n`\r\n\r\nexport function Loader({ progress }: { progress: number }) {\r\n  return (\r\n    <>\r\n      {progress < 100 && (\r\n        <Main>\r\n          Loading...\r\n          <div style={{ width: `${progress}%` }}></div>\r\n        </Main>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","export const lerp = (v0: number, v1: number, t: number) => v0 * (1 - t) + v1 * t\r\n","import styled from \"styled-components\"\r\n\r\nimport { useEffect, useRef } from \"react\"\r\nimport { Canvas } from \"react-three-fiber\"\r\nimport { Page } from \"./Page\"\r\nimport { Scene } from \"./Scene\"\r\nimport { Loader } from \"./Loader\"\r\nimport { pageData } from \"../page-data\"\r\n\r\nimport { state } from \"../state\"\r\nimport { lerp } from \"../utils/lerp\"\r\nimport { useProgress } from \"drei\"\r\nimport { breakpoints } from \"../constants\"\r\n\r\nconst Background = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  background: #f58b52;\r\n  z-index: -1;\r\n  top: 0;\r\n  left: 0;\r\n`\r\n\r\nconst PagesContainer = styled.div`\r\n  @media (min-width: ${breakpoints.medium}px) {\r\n    backdrop-filter: blur(20px);\r\n    background: rgba(252, 102, 3, 0.5);\r\n    width: 50%;\r\n    margin-left: auto;\r\n  }\r\n`\r\n\r\nconst fuzzyThresh = 0.6\r\n\r\nexport function App() {\r\n  const { progress } = useProgress()\r\n  const pageRefs = useRef(new Array(pageData.length))\r\n\r\n  useEffect(() => {\r\n    if (progress !== 100) return\r\n\r\n    const updateScrollState = () => {\r\n      for (let i = pageRefs.current.length - 1; i >= 0; i--) {\r\n        // Loop through page elements backwards to see which one is current\r\n        // The first one to be above the top of the viewport is our current page\r\n        if (pageRefs.current[i].offsetTop - window.pageYOffset <= 0) {\r\n          state.currPageIndex = i\r\n          break\r\n        }\r\n      }\r\n      state.prevPagePos = state.pagePos\r\n\r\n      const currEl = pageRefs.current[state.currPageIndex]\r\n      const relScroll = window.pageYOffset - currEl.offsetTop\r\n      state.pagePos = Math.min(relScroll / currEl.clientHeight, 0.9999)\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n      updateScrollState()\r\n\r\n      if (state.pagePos > state.prevPagePos && state.pagePos > fuzzyThresh) {\r\n        // Scrolling down\r\n        state.fuzzyPageIndex = Math.min(\r\n          state.currPageIndex + 1,\r\n          pageData.length - 1\r\n        )\r\n      } else if (\r\n        state.pagePos < state.prevPagePos &&\r\n        state.pagePos % 1 < 1 - fuzzyThresh\r\n      ) {\r\n        // Scrolling up\r\n        state.fuzzyPageIndex = Math.max(state.currPageIndex, 0)\r\n      }\r\n    })\r\n\r\n    updateScrollState()\r\n    state.fuzzyPageIndex = Math.round(state.pagePos)\r\n\r\n    window.addEventListener(\"mousemove\", (e) => {\r\n      state.mousePos.set(\r\n        lerp(-1, 1, e.clientX / window.innerWidth),\r\n        lerp(1, -1, e.clientY / window.innerHeight)\r\n      )\r\n    })\r\n  }, [progress])\r\n\r\n  return (\r\n    <>\r\n      <Loader progress={progress} />\r\n      <Background>\r\n        <Canvas shadowMap>\r\n          <Scene mainAssetsHaveLoaded={progress === 100} />\r\n        </Canvas>\r\n      </Background>\r\n\r\n      {progress === 100 && (\r\n        <PagesContainer>\r\n          {pageData.map((props, i) => (\r\n            <div key={i} ref={(el) => (pageRefs.current[i] = el)}>\r\n              <Page {...props} />\r\n            </div>\r\n          ))}\r\n        </PagesContainer>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport { App } from \"./components/App\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}